[{"C:\\Users\\User\\Desktop\\project\\CompanyEmployee\\my-app\\src\\index.js":"1","C:\\Users\\User\\Desktop\\project\\CompanyEmployee\\my-app\\src\\App.js":"2","C:\\Users\\User\\Desktop\\project\\CompanyEmployee\\my-app\\src\\serviceWorker.js":"3","C:\\Users\\User\\Desktop\\project\\CompanyEmployee\\my-app\\src\\redux\\store.js":"4","C:\\Users\\User\\Desktop\\project\\CompanyEmployee\\my-app\\src\\redux\\actionsRedux.js":"5","C:\\Users\\User\\Desktop\\project\\CompanyEmployee\\my-app\\src\\components\\EmployeeList.js":"6","C:\\Users\\User\\Desktop\\project\\CompanyEmployee\\my-app\\src\\services\\Employee.js":"7","C:\\Users\\User\\Desktop\\project\\CompanyEmployee\\my-app\\src\\components\\EmployeeForm.js":"8","C:\\Users\\User\\Desktop\\project\\CompanyEmployee\\my-app\\src\\testLookLike\\EmployeeFormTest.js":"9","C:\\Users\\User\\Desktop\\project\\CompanyEmployee\\my-app\\src\\NavBar.js":"10","C:\\Users\\User\\Desktop\\project\\CompanyEmployee\\my-app\\src\\components\\EmployeeDetails.js":"11"},{"size":694,"mtime":1610989715901,"results":"12","hashOfConfig":"13"},{"size":780,"mtime":1611410303803,"results":"14","hashOfConfig":"13"},{"size":5141,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":189,"mtime":1610899881300,"results":"16","hashOfConfig":"13"},{"size":2017,"mtime":1611399355678,"results":"17","hashOfConfig":"13"},{"size":1625,"mtime":1611411638409,"results":"18","hashOfConfig":"13"},{"size":1250,"mtime":1611398865481,"results":"19","hashOfConfig":"13"},{"size":5649,"mtime":1611399485202,"results":"20","hashOfConfig":"13"},{"size":5264,"mtime":1611165393062,"results":"21","hashOfConfig":"13"},{"size":806,"mtime":1611409263350,"results":"22","hashOfConfig":"13"},{"size":3448,"mtime":1611414362529,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"nxz3km",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"52","usedDeprecatedRules":"26"},"C:\\Users\\User\\Desktop\\project\\CompanyEmployee\\my-app\\src\\index.js",[],["53","54"],"C:\\Users\\User\\Desktop\\project\\CompanyEmployee\\my-app\\src\\App.js",[],"C:\\Users\\User\\Desktop\\project\\CompanyEmployee\\my-app\\src\\serviceWorker.js",[],"C:\\Users\\User\\Desktop\\project\\CompanyEmployee\\my-app\\src\\redux\\store.js",[],"C:\\Users\\User\\Desktop\\project\\CompanyEmployee\\my-app\\src\\redux\\actionsRedux.js",[],"C:\\Users\\User\\Desktop\\project\\CompanyEmployee\\my-app\\src\\components\\EmployeeList.js",["55","56"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { DeleteEmployee, GetAllEmployee } from '../services/Employee';\r\nimport { Button, Table  } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nexport default () => {\r\n    \r\n    const employee = useSelector(state => state.actionsRedux.employee);\r\n\r\n     //hook του react-redux για να παρουμε την εκασθοτε αλλαγη που θελουμε\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        GetAllEmployee(dispatch);\r\n    }, [dispatch]);\r\n\r\n   \r\n\r\n    return(\r\n        <div>\r\n    <Table style={{width: '100%',height: '50%'}} variant=\"dark\">\r\n        <thead>\r\n            <tr>\r\n                <td>#</td>\r\n                <td>First Name</td>\r\n                <td>Last Name</td>\r\n                <td>Phone</td>\r\n                <td>Address</td>\r\n                <td>Email</td>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {employee.map(post =>\r\n            <tr>\r\n                <td>{post.id}</td>\r\n                <td>{post.firstName}</td>\r\n                <td>{post.lastName}</td>\r\n                <td>{post.phone}</td>\r\n                <td>{post.address}</td>\r\n                <td>{post.email}</td>\r\n                <td><Link to={`/EmployeeDetails/${post.id}`}>\r\n              <Button color=\"success\">Edit</Button></Link></td>                   \r\n            </tr>\r\n            )}\r\n        </tbody>\r\n    </Table>\r\n        <a className=\"btn btn-success\" href=\"/EmployeeForm\" role=\"button\">Add</a>\r\n    </div>\r\n          \r\n    )\r\n}","C:\\Users\\User\\Desktop\\project\\CompanyEmployee\\my-app\\src\\services\\Employee.js",["57","58"],"import { ActionCreators } from '../redux/actionsRedux';\r\nimport * as axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://localhost:5001',\r\n})\r\n\r\nexport const GetAllEmployee = async (dispatch) => {\r\n    try {\r\n        const { data } = await axiosInstance.get('/Employee');\r\n        console.log(data)\r\n        dispatch(ActionCreators.setEmployee(data));\r\n    } catch (exception){\r\n        console.log(exception);\r\n    }\r\n}\r\n\r\nexport const DeleteEmployee = async (dispatch, employee) => {\r\n    try {\r\n        await axiosInstance.delete('/Employee/${id}');\r\n        dispatch(ActionCreators.deleteEmployee(employee));\r\n    } catch {\r\n        console.log('something happen!!');\r\n    }\r\n}\r\n\r\n\r\nexport const NewEmployee = async (dispatch, employee) => {\r\n    try {\r\n        const { data } = await axiosInstance.post('/Employee', employee);\r\n        dispatch(ActionCreators.newEmployee(data));\r\n    } catch {\r\n        console.log('something happen!!');\r\n    }\r\n}\r\n\r\nexport const EditEmployee = async (dispatch, employee) => {\r\n    try {\r\n        await axiosInstance.put('/Employee/${id}', employee);\r\n        dispatch(ActionCreators.editEmployee(employee));\r\n\r\n    } catch {\r\n        console.log('something happen!!');\r\n    }\r\n}",["59","60"],"C:\\Users\\User\\Desktop\\project\\CompanyEmployee\\my-app\\src\\components\\EmployeeForm.js",["61"],"import { React, useState, useEffect } from 'react';\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { EditEmployee, NewEmployee } from '../services/Employee';\r\nimport { useDispatch } from 'react-redux';\r\nimport \"./Form.css\";\r\n\r\nexport default ({ employee, setIsEditing }) => {\r\n  const [firstName, setfirstName] = useState(\"\");\r\n  const [lastName, setlastName] = useState(\"\");\r\n  const [email, setemail] = useState(\"\");\r\n  const [address, setaddress] = useState(\"\");\r\n  const [phone, setphone] = useState(\"\");\r\n  const [isNewEmployee, setIsNewEmployee] = useState(true);\r\n\r\n  //hook του react-redux για να παρουμε την εκασθοτε αλλαγη που θελουμε\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    if (employee !== undefined) {\r\n      setIsNewEmployee(false);\r\n      setfirstName(employee.firstName);\r\n      setlastName(employee.lastName);\r\n      setemail(employee.email);\r\n      setaddress(employee.address);\r\n      setphone(employee.phone);\r\n    }\r\n    else {\r\n      setIsNewEmployee(true);\r\n    }\r\n  }, [employee]);\r\n\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (isNewEmployee) {\r\n      NewEmployee(dispatch, { lastName: lastName, firstName: firstName, email: email, address: address, phone: phone });\r\n    }\r\n    else {\r\n      EditEmployee(dispatch, { lastName: lastName, firstName: firstName, email: email, address: address, phone: phone });\r\n      setIsEditing(false);\r\n    }\r\n    const isValid = formValidation();\r\n    if (isValid) {\r\n      alert(\"Form submitted\");\r\n    } else {\r\n      alert(\"FORM INVALID - DISPLAY ERROR MESSAGE\")\r\n    }\r\n\r\n\r\n  }\r\n\r\n  const [lastNameError, setlastNameError] = useState({});\r\n  const [firstNameError, setfirstNameError] = useState({});\r\n  const [emailError, setemailError] = useState({});\r\n  const [addressError, setaddressError] = useState({});\r\n  const [phoneError, setphoneError] = useState({});\r\n\r\n\r\n\r\n  const formValidation = () => {\r\n\r\n    //create empty error list foreach value\r\n    const lastNameError = {};\r\n    const firstNameError = {};\r\n    const addressError = {};\r\n    const emailError = {};\r\n    const phoneError = {};\r\n    let isValid = true;\r\n\r\n    //first name\r\n    if (!firstName) {\r\n      firstNameError[\"firstName\"] = \"First Name Cannot be empty\";\r\n      isValid = false;\r\n    }\r\n\r\n\r\n    if (!firstName.match(/^[a-zA-Z]+$/)) {\r\n      firstNameError[\"firstName\"] = \"First Name must have only letters\";\r\n      isValid = false;\r\n    }\r\n\r\n\r\n    //lastName\r\n    if (!lastName) {\r\n      lastNameError[\"firstName\"] = \"Last Name cannot be empty\";\r\n      isValid = false;\r\n    }\r\n\r\n\r\n    if (!lastName.match(/^[a-zA-Z]+$/)) {\r\n      lastNameError[\"lastName\"] = \"Last Name must have only letters\";\r\n      isValid = false;\r\n    }\r\n\r\n\r\n    //Email\r\n    if (!email) {\r\n      emailError[\"email\"] = \"Email cannot be empty\";\r\n      isValid = false;\r\n    }\r\n\r\n    //Address\r\n    if (address.trim().length < 1) {\r\n      addressError[\"address\"] = \"Address cannot be empty\";\r\n      isValid = false;\r\n    }\r\n\r\n    //Phone\r\n    if (phone.trim().length < 1) {\r\n      phoneError[\"phone\"] = \"Phone cannot be empty\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!phone.match(/^[0-9\\b]+$/)) {\r\n      phoneError[\"phone\"] = \"Phone must have only number\";\r\n      isValid = false;\r\n    }\r\n\r\n    //fill error list foreach value.If exist errors.\r\n    setlastNameError(lastNameError);\r\n    setfirstNameError(firstNameError);\r\n    setaddressError(addressError);\r\n    setemailError(emailError);\r\n    setphoneError(phoneError);\r\n\r\n    return isValid;\r\n  }\r\n\r\n  return (\r\n    <Form id=\"contact-form\" onSubmit={handleSubmit}>\r\n      <Form.Group value={firstName} onChange={event => setfirstName(event.target.value)}>\r\n        <Form.Label>First Name:</Form.Label>\r\n        <Form.Control placeholder=\"First Name\" />\r\n        {Object.keys(firstNameError).map((key) => {\r\n          return <div style={{ color: \"red\" }}>{firstNameError[key]}</div>\r\n        })}\r\n      </Form.Group>\r\n      <Form.Group value={lastName} onChange={event => setlastName(event.target.value)}>\r\n        <Form.Label>Last Name :</Form.Label>\r\n        <Form.Control placeholder=\"Last Name\" />\r\n        {Object.keys(lastNameError).map((key) => {\r\n          return <div style={{ color: \"red\" }}>{lastNameError[key]}</div>\r\n        })}\r\n      </Form.Group>\r\n      <Form.Group value={email} onChange={event => setemail(event.target.value)}>\r\n        <Form.Label>Email :</Form.Label>\r\n        <Form.Control placeholder=\"Email\" />\r\n        {Object.keys(emailError).map((key) => {\r\n          return <div style={{ color: \"red\" }}>{emailError[key]}</div>\r\n        })}\r\n      </Form.Group>\r\n      <Form.Group value={address} onChange={event => setaddress(event.target.value)}>\r\n        <Form.Label>Address :</Form.Label>\r\n        <Form.Control placeholder=\"Address\" />\r\n        {Object.keys(addressError).map((key) => {\r\n          return <div style={{ color: \"red\" }}>{addressError[key]}</div>\r\n        })}\r\n      </Form.Group>\r\n      <Form.Group value={phone} onChange={event => setphone(event.target.value)}>\r\n        <Form.Label>Phone:</Form.Label>\r\n        <Form.Control placeholder=\"Phone\" />\r\n        {Object.keys(phoneError).map((key) => {\r\n          return <div style={{ color: \"red\" }}>{phoneError[key]}</div>\r\n        })}\r\n      </Form.Group>\r\n      <div style={{ marginTop: 'auto' }}>\r\n        {\r\n          isNewEmployee ? <Button variant='primary' type='submit'>Add</Button>\r\n            :\r\n            <div>\r\n              <Button style={{ marginRight: '2px' }} variant='success' type='submit'>Save</Button>\r\n            </div>}\r\n      </div>\r\n\r\n    </Form>\r\n  )\r\n}","C:\\Users\\User\\Desktop\\project\\CompanyEmployee\\my-app\\src\\testLookLike\\EmployeeFormTest.js",[],["62","63"],"C:\\Users\\User\\Desktop\\project\\CompanyEmployee\\my-app\\src\\NavBar.js",[],"C:\\Users\\User\\Desktop\\project\\CompanyEmployee\\my-app\\src\\components\\EmployeeDetails.js",["64"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Form,Button  } from \"react-bootstrap\";\r\nimport \"./Form.css\";\r\n\r\n\r\n\r\nclass EditEmployee extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          id:'',\r\n          firstName: '',\r\n          lastName: '',\r\n          phone: '',\r\n          address: '',\r\n          email: ''\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n      }\r\n     \r\n      componentDidMount(id) {\r\n        let eId = this.props.match.params.id;\r\n        axios.get(`https://localhost:5001/Employee/${eId}`)\r\n        .then(response => {\r\n          this.setState({\r\n            id: response.data.id,\r\n            firstName:response.data.firstName,\r\n            lastName:response.data.lastName,\r\n            phone:response.data.phone,\r\n            address:response.data.address,\r\n            email:response.data.email\r\n          }, () => {\r\n            console.log(this.state);\r\n          });\r\n        }) .catch(error => {\r\n            console.log(error)\r\n            this.setState({ errorMsg: 'Error retreiving data' })\r\n          })\r\n      }\r\n\r\n\r\n\r\n      onSubmit(id, e){\r\n        e.preventDefault();\r\n        axios.put(`https://localhost:5001/Employee/${this.state.id}`, this.state)\r\n          .then(response => {\r\n            console.log(response);       \r\n          }).catch(err => console.log(err));\r\n          this.props.history.push('/CourseForm'); \r\n      }\r\n\r\n  deleteRow(id, e){\r\n    let eId = this.props.match.params.id;\r\n    axios.delete(`https://localhost:5001/Employee/${eId}`)\r\n      .then(res => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n  \r\n      })\r\n  \r\n  }\r\n\r\n \r\n  handleInputChange(e){\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n\r\n  render(){\r\n    return (\r\n        this.state?\r\n     <div >\r\n        <br />\r\n       <h1 style={{textAlign:'center',marginTop:30 }}>Edit Employee</h1>\r\n       <form id=\"contact-form\" onSubmit={(e)=>this.onSubmit(this.state.id,e)}>\r\n          <Form.Group >\r\n            <Form.Label> Name  </Form.Label>\r\n            <Form.Control type=\"text\" name=\"firstName\" value={this.state.firstName} onChange={this.handleInputChange} />\r\n          </Form.Group>\r\n          <Form.Group >\r\n            <Form.Label> lastName  </Form.Label>\r\n            <Form.Control type=\"text\" name=\"lastName\" value={this.state.lastName} onChange={this.handleInputChange} />\r\n          </Form.Group>\r\n          <Form.Group >\r\n            <Form.Label> phone  </Form.Label>\r\n            <Form.Control type=\"text\" name=\"phone\" value={this.state.phone} onChange={this.handleInputChange} />\r\n          </Form.Group>\r\n          <Form.Group >\r\n            <Form.Label> address  </Form.Label>\r\n            <Form.Control type=\"text\" name=\"address\" value={this.state.address} onChange={this.handleInputChange} />\r\n          </Form.Group>\r\n          <Form.Group >\r\n            <Form.Label> email  </Form.Label>\r\n            <Form.Control type=\"text\" name=\"firstName\" value={this.state.email} onChange={this.handleInputChange} />\r\n          </Form.Group>\r\n          <Button variant='primary' type='submit'>Add</Button>\r\n          <button className=\"btn btn-danger\" style={{float: 'right'}} onClick={(e) => this.deleteRow(this.state.id, e)}>Delete</button>\r\n        </form>\r\n      </div>: \"loading\" \r\n    )\r\n  }\r\n}\r\n\r\nexport default EditEmployee;",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":3,"column":10,"nodeType":"71","messageId":"72","endLine":3,"endColumn":24},{"ruleId":"73","severity":1,"message":"74","line":9,"column":1,"nodeType":"75","endLine":54,"endColumn":2},{"ruleId":"76","severity":1,"message":"77","line":20,"column":36,"nodeType":"78","messageId":"79","endLine":20,"endColumn":53},{"ruleId":"76","severity":1,"message":"77","line":39,"column":33,"nodeType":"78","messageId":"79","endLine":39,"endColumn":50},{"ruleId":"65","replacedBy":"80"},{"ruleId":"67","replacedBy":"81"},{"ruleId":"73","severity":1,"message":"74","line":7,"column":1,"nodeType":"75","endLine":179,"endColumn":2},{"ruleId":"65","replacedBy":"82"},{"ruleId":"67","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":24,"column":9,"nodeType":"86","messageId":"87","endLine":36,"endColumn":18,"fix":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'DeleteEmployee' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression",["89"],["90"],["89"],["90"],"no-whitespace-before-property","Unexpected whitespace before property catch.","MemberExpression","unexpectedWhitespace",{"range":"91","text":"92"},"no-global-assign","no-unsafe-negation",[1024,1026],"."]